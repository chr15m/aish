# aish: AI shell completions <https://github.com/chr15m/aish>
# vi: ft=bash

# Why no hash-bang?
# It's so this script can be sourced under both bash and zsh.

# Website: <https://mccormick.cx>
# Donate:  <https://www.patreon.com/chr15m>
# Donate:  <ko-fi.com/chr15m>

if [ "$1" = "" -o "$1" = "-h" ]
then
  echo "Usage: . aish QUERY"
  echo
  echo "QUERY:   tell the AI what you want"
  echo "Example: '. aish a for loop going from 5 to 15'."
  echo "Note:    You must include the . to source the script."
  echo "         The result will be available from history with the up key."
  exit 0
fi

# test if user has sourced the script and notify them if not

_throw_source_error () {
    echo "Error: you must call aish sourced with a . like this:"
    echo ". aish ${@}"
    exit 1  
}

if [ "${SHELL}" = "/bin/bash" ]
then
  (return 0 2>/dev/null) && sourced=1 || sourced=0
  if [ $sourced -eq 0 ]; then
    _throw_source_error
  fi
fi

if [ "${SHELL}" = "/bin/zsh" ]
then
  if [[ "${ZSH_EVAL_CONTEXT}" = "toplevel" ]]
  then
    _throw_source_error
  fi
fi

request=`echo "${@}" | sed -r 's/"/\\\"/g'`

data='{
  "model": "gpt-4",
  "messages": [
    {"role": "user", "content": "Please write a one-liner in bash shell for performing the following task. Assume you have access to all of the commonly available unix commands on a modern Linux system. You can separate multi-line commands with a semicolon or double ampersand but please put them on one line. Please only return the exact bash one-liner command without any superfluous words explaining it. Here is the task I would like you to carry out with the one-liner: '$request'"}
  ]
}'

echo -ne "...fetching solution..."
json=$( curl -s https://api.openai.com/v1/chat/completions -u ":${OPENAI_API_KEY}" -H 'Content-Type: application/json' -d "${data}" )
echo -ne "\033[2K" ; printf "\r"

if `echo "${json}" | grep -q '"content": '`
then
  result=`echo "${json}" | grep '"content": "' | sed -nr 's/"content": "(.*)"/\1/p' | sed -e 's/^[ \t]*//' | sed -e 's/\\\"/"/g'`
  echo "Hit Enter to add this command to history or ctrl-C to abort:"
  echo -n "$ ${result}"
  read -r _
  if [ "${SHELL}" = "/bin/zsh" ]
  then
    print -s "${result}"
  else
    set -o history
    shopt -s histappend
    history -s "${result}"
    history -w
  fi
  echo "Press the up arrow to access the solution."
else
  echo "${json}"
fi
